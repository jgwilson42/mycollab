package com.mycollab.core.utils;

import org.junit.Assert;
import org.junit.Test;

import com.diffblue.deeptestutils.Reflector;

public class NumberUtilsTest {

  /* testedClasses: NumberUtils */

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 34 branch to line 34
   */

  @Test
  public void com_mycollab_core_utils_NumberUtils_zeroIfNull_000_f12939e945ef429a() throws Throwable {

    Number retval;
    {
      /* Arrange */
      Number value = null;

      /* Act */
      retval = com.mycollab.core.utils.NumberUtils.zeroIfNull(value);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals(0, Reflector.getInstanceField(retval, "value"));
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 34 branch to line 34
   */

  @Test
  public void com_mycollab_core_utils_NumberUtils_zeroIfNull_001_b08517b82d11590b() throws Throwable {

    Number retval;
    {
      /* Arrange */
      Byte param_0 = (Byte) Reflector.getInstance("java.lang.Byte");
      Reflector.setField(param_0, "value", (byte)0);
      Number value = param_0;

      /* Act */
      retval = com.mycollab.core.utils.NumberUtils.zeroIfNull(value);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals((byte)0, Reflector.getInstanceField(retval, "value"));
    }
  }
}
